{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chaos\\\\personal-project\\\\STL-renfest\\\\src\\\\pages\\\\cast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MDBCard, MDBCardTitle, MDBCardText, MDBCardBody, MDBCardImage, MDBRow, MDBCol } from \"mdb-react-ui-kit\";\nimport Navigation from \"../components/navigation/Navigation.js\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/cast-warrior.css\";\nimport amber_fern from '../images/cast/amber-fern.jpg';\nimport brendan_noe from '../images/cast/brendan-noe.jpg';\nimport catherine_kuehner from '../images/cast/catherine-kuehner.jpg';\nimport chris_siebert from '../images/cast/chris-siebert.jpg';\nimport dann_blinn from '../images/cast/dan-blinn-placeholder.jpg';\nimport david_edwards from '../images/cast/david-edwards.jpg';\nimport david_hernandez from '../images/cast/david-hernandez.jpg';\nimport grace_mays from '../images/cast/grace-mays.jpg';\nimport jacqueline_brown from '../images/cast/jacqueline-brown.jpg';\nimport james_boswell from '../images/cast/james-boswell.jpg';\nimport joseph_fieger_sr from '../images/cast/joseph-fieger-sr.jpg';\nimport kathleen_mitchell from '../images/cast/kathleen-mitchell.jpg';\nimport kathleen_whalen from '../images/cast/kathleen-whalen.jpg';\nimport kathryn_smallen from '../images/cast/kathryn-smallen.jpg';\nimport krista_strahm from '../images/cast/krista-strahm.jpg';\nimport kristen_haynes from '../images/cast/kristen-haynes.jpg';\nimport lanya_da_silva from '../images/cast/lanya-da-silva.jpg';\nimport noel_kling from '../images/cast/noel-kling.jpg';\nimport sheana_godwin from '../images/cast/sheana-godwin.jpg';\nimport susanna_ennenbach from '../images/cast/susanna-ennenbach.jpg';\nimport ted_jander from '../images/cast/ted-jander.jpg';\nimport trenton_brookesher from '../images/cast/trenton-brookesher.jpg';\nimport zak_gilliland from '../images/cast/zak-gilliland.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst castList = {\n  Court: [\"The royalty and noblity at the faire grounds. They perform they're noble duties whilst running amok in the crowds.\", {\n    realName: \"Joseph Fieger Sr\",\n    role: \"Thomas Wolsey\",\n    position: \"Cardinal of England\",\n    image: joseph_fieger_sr\n  }, {\n    realName: \"David Edwards\",\n    role: \"King Henry VIII\",\n    position: \"By the Grace of God, King of England and France, Defender of the Faith and Lord of Ireland\",\n    image: david_edwards\n  }, {\n    realName: \"Ted Jander\",\n    role: \"King Francois\",\n    position: \"King of France, Duke of Brittany\",\n    image: ted_jander\n  }, {\n    realName: \"Kathleen Mitchell\",\n    role: \"Queen Katherine of Aragon\",\n    position: \"Queen Consort of England, Princess of Spain\",\n    image: kathleen_mitchell\n  }, {\n    realName: \"Lanya da Silva\",\n    role: \"Queen Claude\",\n    position: \"Queen de France, Duchess of Britanny,  Holy Roman Empress, Empress of the Universe, Queen of England, Spain and EVERYTHING, Duchess of Milan\",\n    image: lanya_da_silva\n  }, //Continued positions: Holy Roman Empress, Empress of the Universe, Queen of England, Spain and EVERYTHING, Duchess of Milan\n  {\n    realName: \"Trenton Brookesher\",\n    role: \"Prince Henri\",\n    position: \"Dauphin of France, Dauphin of Viennois\",\n    image: trenton_brookesher\n  }, {\n    realName: \"Jacqueline Brown\",\n    role: \"Princess Mary\",\n    position: \"Crown Princess of England\",\n    image: jacqueline_brown\n  }, {\n    realName: \"Kat Whalen\",\n    role: \"Princess Catherine\",\n    position: \"Princess of Portugal and Spain, ArchDuchess of Austria, Duchess of Braganza\",\n    image: kathleen_whalen,\n    leadership: \"Court Guild Lead\"\n  }, {\n    realName: 'Brendan Noe',\n    role: \"Anne de Montomrency\",\n    position: '',\n    image: brendan_noe\n  }, {\n    realName: \"Jason Smallen\",\n    role: \"Sir William Carey\",\n    position: \"\",\n    image: \"../images/cast/jason-smallen.jpg\"\n  }, {\n    realName: \"Sheana Godwin\",\n    role: \"\",\n    position: \"Duchess\",\n    image: \"../images/cast/sheana-godwin.jpg\"\n  }, {\n    realName: \"Kristen Haynes\",\n    role: \"Anne Boleyn\",\n    position: \"Lady in Waiting\",\n    image: \"../images/cast/kristen-haynes.jpg\"\n  }, {\n    realName: \"Amber Fern\",\n    role: \"Jane Seymour\",\n    position: \"Lady in Waiting\",\n    image: amber_fern\n  }, {\n    realName: \"Zak Gilliland\",\n    role: \"Richard\",\n    position: \"Noble Assistant\",\n    image: \"../images/cast/zak-gilliland.jpg\"\n  }, {\n    realName: \"Chris Siebert\",\n    role: \"Harold\",\n    position: \"Herald\",\n    image: \"../images/cast/chris-siebert.jpg\"\n  }, {\n    realName: \"Kathryn Smallen\",\n    role: \"\",\n    position: \"English Royal Guard\",\n    image: \"../images/cast/kathryn-smallen.jpg\"\n  }, {\n    realName: \"James Boswell\",\n    role: \"\",\n    position: \"French Royal Guard\",\n    image: \"../images/cast/james-boswell.jpg\"\n  }],\n  Fae: [\"The fairies, elves, and mystic beings who bring life to the wilderness.\"],\n  Fighter: [\"The fighters are the ones who intent to put on a show in the lanes with some form of weaponry.\", {\n    realName: \"Dan Blinn\",\n    role: \"Reynold\",\n    position: \"Hired Mercenary\",\n    image: \"../images/cast/dan-blinn-placeholder.jpg\",\n    leadership: \"Fight Director\"\n  }, {\n    realName: \"Noel Kling\",\n    role: \"Griffin Morecotte\",\n    position: \"Kingsman\",\n    image: \"../images/cast/noel-kling.jpg\"\n  }],\n  Traveler: [\"The traders, craftmaen, entertainers, and their own brand of royalty as they're their own traveling village.\", {\n    realName: \"David Hernandez\",\n    role: \"Mauritz\",\n    position: \"Hunter/Tradesman\",\n    image: \"../images/cast/david-hernandez.jpg\"\n  }, {\n    realName: \"Susanna Ennenbach\",\n    role: \"Sasha\",\n    position: \"Herbalist\",\n    image: \"../images/cast/susanna-ennenbach.jpg\"\n  }, {\n    realName: \"Catherine Kuehner\",\n    role: \"Volyana\",\n    position: \"Entertainer\",\n    image: \"../images/cast/catherine-kuehner.jpg\"\n  }, {\n    realName: \"Grace Mays\",\n    role: \"Katerina\",\n    position: \"\",\n    image: \"../images/cast/grace-mays.jpg\"\n  }, {\n    realName: \"Krista Strahm\",\n    role: \"Zelma\",\n    position: \"Matriarch\",\n    image: \"../images/cast/krista-strahm.jpg\",\n    leadership: \"Traveler Guild Lead\"\n  }],\n  Village: [\"Those who enjoy their day to day live in Petit Lyon with crafts and simple peace of the festivals.\"]\n};\n\nfunction Cast() {\n  _s();\n\n  const guildArr = [\"Court\", \"Fae\", \"Fighter\", \"Traveler\", \"Village\"];\n  const [width, setWidth] = useState(window.innerWidth);\n\n  function handleWindowSizeChange() {\n    setWidth(window.innerWidth);\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowSizeChange);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\n    };\n  }, []);\n  let isMobile = width <= 1024 ? true : false;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-header\",\n      children: \"Cast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"margin-width current\",\n      children: guildArr.map((guild, j) => {\n        return /*#__PURE__*/_jsxDEV(\"details\", {\n          id: guild,\n          className: \"guild\",\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            children: [guild, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 25\n            }, this), \" \", castList[guild][0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), castList[guild].slice(1).map(item => {\n            return isMobile ? /*#__PURE__*/_jsxDEV(MDBCard, {\n              className: \"cast-list\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(MDBCardImage, {\n                src: item.image,\n                alt: item.realName,\n                fluid: true,\n                position: \"top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(MDBCardBody, {\n                className: \"mbl-cast\",\n                children: [/*#__PURE__*/_jsxDEV(MDBCardTitle, {\n                  className: \"cast-name\",\n                  children: [item.realName, \" \", item.leadership ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"guild-lead\",\n                    children: [\"**\", item.leadership, \"**\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 31\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(MDBCardText, {\n                  className: \"cast-role\",\n                  children: item.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(MDBCardText, {\n                  className: \"cast-position\",\n                  children: item.position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 26\n              }, this)]\n            }, item.realName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(MDBCard, {\n              className: \"cast-list\",\n              children: [\" \", console.log(item), /*#__PURE__*/_jsxDEV(MDBRow, {\n                className: \"cast-card\",\n                children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(MDBCardImage, {\n                    src: item.image,\n                    alt: item.realName,\n                    fluid: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n                  md: \"8\",\n                  children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n                    children: [/*#__PURE__*/_jsxDEV(MDBCardTitle, {\n                      className: \"cast-name\",\n                      children: [item.realName, \" \", item.leadership ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"guild-lead\",\n                        children: [\"**\", item.leadership, \"**\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MDBCardText, {\n                      className: \"cast-role\",\n                      children: item.role\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(MDBCardText, {\n                      className: \"cast-position\",\n                      children: item.position\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 21\n              }, this)]\n            }, item.realName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this);\n          })]\n        }, guild, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"warriorLink\",\n      to: \"/warriors-island\",\n      children: \"Our Brave Warriors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cast, \"G7kj69GIMHEKUWgFcp/hGy+ukY8=\");\n\n_c = Cast;\nexport default Cast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"sources":["C:/Users/Chaos/personal-project/STL-renfest/src/pages/cast.js"],"names":["React","useState","useEffect","MDBCard","MDBCardTitle","MDBCardText","MDBCardBody","MDBCardImage","MDBRow","MDBCol","Navigation","Link","amber_fern","brendan_noe","catherine_kuehner","chris_siebert","dann_blinn","david_edwards","david_hernandez","grace_mays","jacqueline_brown","james_boswell","joseph_fieger_sr","kathleen_mitchell","kathleen_whalen","kathryn_smallen","krista_strahm","kristen_haynes","lanya_da_silva","noel_kling","sheana_godwin","susanna_ennenbach","ted_jander","trenton_brookesher","zak_gilliland","castList","Court","realName","role","position","image","leadership","Fae","Fighter","Traveler","Village","Cast","guildArr","width","setWidth","window","innerWidth","handleWindowSizeChange","addEventListener","removeEventListener","isMobile","map","guild","j","slice","item","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBCardBody,\r\n  MDBCardImage,\r\n  MDBRow,\r\n  MDBCol,\r\n} from \"mdb-react-ui-kit\";\r\nimport Navigation from \"../components/navigation/Navigation.js\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/cast-warrior.css\";\r\n\r\nimport amber_fern from '../images/cast/amber-fern.jpg'\r\nimport brendan_noe from '../images/cast/brendan-noe.jpg'\r\nimport catherine_kuehner from '../images/cast/catherine-kuehner.jpg'\r\nimport chris_siebert from '../images/cast/chris-siebert.jpg'\r\nimport dann_blinn from '../images/cast/dan-blinn-placeholder.jpg'\r\nimport david_edwards from '../images/cast/david-edwards.jpg'\r\nimport david_hernandez from '../images/cast/david-hernandez.jpg'\r\nimport grace_mays from '../images/cast/grace-mays.jpg'\r\nimport jacqueline_brown from '../images/cast/jacqueline-brown.jpg'\r\nimport james_boswell from '../images/cast/james-boswell.jpg'\r\nimport joseph_fieger_sr from '../images/cast/joseph-fieger-sr.jpg'\r\nimport kathleen_mitchell from '../images/cast/kathleen-mitchell.jpg'\r\nimport kathleen_whalen from '../images/cast/kathleen-whalen.jpg'\r\nimport kathryn_smallen from '../images/cast/kathryn-smallen.jpg'\r\nimport krista_strahm from '../images/cast/krista-strahm.jpg'\r\nimport kristen_haynes from '../images/cast/kristen-haynes.jpg'\r\nimport lanya_da_silva from '../images/cast/lanya-da-silva.jpg'\r\nimport noel_kling from '../images/cast/noel-kling.jpg'\r\nimport sheana_godwin from '../images/cast/sheana-godwin.jpg'\r\nimport susanna_ennenbach from '../images/cast/susanna-ennenbach.jpg'\r\nimport ted_jander from '../images/cast/ted-jander.jpg'\r\nimport trenton_brookesher from '../images/cast/trenton-brookesher.jpg'\r\nimport zak_gilliland from '../images/cast/zak-gilliland.jpg'\r\n\r\n\r\nconst castList = {\r\n  Court: [\r\n    \"The royalty and noblity at the faire grounds. They perform they're noble duties whilst running amok in the crowds.\",\r\n    {\r\n      realName: \"Joseph Fieger Sr\",\r\n      role: \"Thomas Wolsey\",\r\n      position: \"Cardinal of England\",\r\n      image: joseph_fieger_sr,\r\n    },\r\n    {\r\n      realName: \"David Edwards\",\r\n      role: \"King Henry VIII\",\r\n      position:\r\n        \"By the Grace of God, King of England and France, Defender of the Faith and Lord of Ireland\",\r\n      image: david_edwards,\r\n    },\r\n    {\r\n      realName: \"Ted Jander\",\r\n      role: \"King Francois\",\r\n      position: \"King of France, Duke of Brittany\",\r\n      image: ted_jander,\r\n    },\r\n    {\r\n      realName: \"Kathleen Mitchell\",\r\n      role: \"Queen Katherine of Aragon\",\r\n      position: \"Queen Consort of England, Princess of Spain\",\r\n      image: kathleen_mitchell,\r\n    },\r\n    {\r\n      realName: \"Lanya da Silva\",\r\n      role: \"Queen Claude\",\r\n      position:\r\n        \"Queen de France, Duchess of Britanny,  Holy Roman Empress, Empress of the Universe, Queen of England, Spain and EVERYTHING, Duchess of Milan\",\r\n      image: lanya_da_silva,\r\n    }, //Continued positions: Holy Roman Empress, Empress of the Universe, Queen of England, Spain and EVERYTHING, Duchess of Milan\r\n    {\r\n      realName: \"Trenton Brookesher\",\r\n      role: \"Prince Henri\",\r\n      position: \"Dauphin of France, Dauphin of Viennois\",\r\n      image: trenton_brookesher,\r\n    },\r\n    {\r\n      realName: \"Jacqueline Brown\",\r\n      role: \"Princess Mary\",\r\n      position: \"Crown Princess of England\",\r\n      image: jacqueline_brown,\r\n    },\r\n    {\r\n      realName: \"Kat Whalen\",\r\n      role: \"Princess Catherine\",\r\n      position:\r\n      \"Princess of Portugal and Spain, ArchDuchess of Austria, Duchess of Braganza\",\r\n      image: kathleen_whalen,\r\n      leadership: \"Court Guild Lead\",\r\n    },\r\n    {\r\n      realName: 'Brendan Noe',\r\n      role: \"Anne de Montomrency\",\r\n      position: '',\r\n      image: brendan_noe,\r\n    },\r\n    {\r\n      realName: \"Jason Smallen\",\r\n      role: \"Sir William Carey\",\r\n      position: \"\",\r\n      image: \"../images/cast/jason-smallen.jpg\",\r\n    },\r\n    {\r\n      realName: \"Sheana Godwin\",\r\n      role: \"\",\r\n      position: \"Duchess\",\r\n      image: \"../images/cast/sheana-godwin.jpg\",\r\n    },\r\n    {\r\n      realName: \"Kristen Haynes\",\r\n      role: \"Anne Boleyn\",\r\n      position: \"Lady in Waiting\",\r\n      image: \"../images/cast/kristen-haynes.jpg\",\r\n    },\r\n    {\r\n      realName: \"Amber Fern\",\r\n      role: \"Jane Seymour\",\r\n      position: \"Lady in Waiting\",\r\n      image: amber_fern,\r\n    },\r\n    {\r\n      realName: \"Zak Gilliland\",\r\n      role: \"Richard\",\r\n      position: \"Noble Assistant\",\r\n      image: \"../images/cast/zak-gilliland.jpg\",\r\n    },\r\n\r\n    {\r\n      realName: \"Chris Siebert\",\r\n      role: \"Harold\",\r\n      position: \"Herald\",\r\n      image: \"../images/cast/chris-siebert.jpg\",\r\n    },\r\n    {\r\n      realName: \"Kathryn Smallen\",\r\n      role: \"\",\r\n      position: \"English Royal Guard\",\r\n      image: \"../images/cast/kathryn-smallen.jpg\",\r\n    },\r\n    {\r\n      realName: \"James Boswell\",\r\n      role: \"\",\r\n      position: \"French Royal Guard\",\r\n      image: \"../images/cast/james-boswell.jpg\",\r\n    },\r\n  ],\r\n  Fae: [\r\n    \"The fairies, elves, and mystic beings who bring life to the wilderness.\",\r\n  ],\r\n  Fighter: [\r\n    \"The fighters are the ones who intent to put on a show in the lanes with some form of weaponry.\",\r\n    {\r\n      realName: \"Dan Blinn\",\r\n      role: \"Reynold\",\r\n      position: \"Hired Mercenary\",\r\n      image: \"../images/cast/dan-blinn-placeholder.jpg\",\r\n      leadership: \"Fight Director\",\r\n    },\r\n    {\r\n      realName: \"Noel Kling\",\r\n      role: \"Griffin Morecotte\",\r\n      position: \"Kingsman\",\r\n      image: \"../images/cast/noel-kling.jpg\",\r\n    },\r\n  ],\r\n  Traveler: [\r\n    \"The traders, craftmaen, entertainers, and their own brand of royalty as they're their own traveling village.\",\r\n    {\r\n      realName: \"David Hernandez\",\r\n      role: \"Mauritz\",\r\n      position: \"Hunter/Tradesman\",\r\n      image: \"../images/cast/david-hernandez.jpg\",\r\n    },\r\n    {\r\n      realName: \"Susanna Ennenbach\",\r\n      role: \"Sasha\",\r\n      position: \"Herbalist\",\r\n      image: \"../images/cast/susanna-ennenbach.jpg\",\r\n    },\r\n    {\r\n      realName: \"Catherine Kuehner\",\r\n      role: \"Volyana\",\r\n      position: \"Entertainer\",\r\n      image: \"../images/cast/catherine-kuehner.jpg\",\r\n    },\r\n    {\r\n      realName: \"Grace Mays\",\r\n      role: \"Katerina\",\r\n      position: \"\",\r\n      image: \"../images/cast/grace-mays.jpg\",\r\n    },\r\n    {\r\n      realName: \"Krista Strahm\",\r\n      role: \"Zelma\",\r\n      position: \"Matriarch\",\r\n      image: \"../images/cast/krista-strahm.jpg\",\r\n      leadership: \"Traveler Guild Lead\",\r\n    },\r\n  ],\r\n  Village: [\r\n    \"Those who enjoy their day to day live in Petit Lyon with crafts and simple peace of the festivals.\",\r\n  ],\r\n};\r\n\r\nfunction Cast() {\r\n  const guildArr = [\"Court\", \"Fae\", \"Fighter\", \"Traveler\", \"Village\"];\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n\r\n  function handleWindowSizeChange() {\r\n    setWidth(window.innerWidth);\r\n  }\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleWindowSizeChange);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\r\n    };\r\n  }, []);\r\n\r\n  let isMobile = width <= 1024 ? true : false;\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <h1 className=\"page-header\">Cast</h1>\r\n      <div className=\"margin-width current\">\r\n        {guildArr.map((guild, j) => {\r\n          return (\r\n            <details key={guild} id={guild} className=\"guild\">\r\n              <summary>\r\n                {guild} <br /> {castList[guild][0]}\r\n              </summary>\r\n              {castList[guild].slice(1).map((item) => {\r\n                return (\r\n                  isMobile ? (\r\n                    <MDBCard key={item.realName} className=\"cast-list\">\r\n                    {\" \"}\r\n                      <MDBCardImage\r\n                          src={item.image}\r\n                          alt={item.realName}\r\n                          fluid\r\n                          position='top'\r\n                        />\r\n                         <MDBCardBody className='mbl-cast'>\r\n                          <MDBCardTitle className=\"cast-name\">{item.realName}{\" \"}\r\n                            {item.leadership ? (\r\n                              <p className=\"guild-lead\">\r\n                                **{item.leadership}**\r\n                              </p>\r\n                            ) : null}</MDBCardTitle>\r\n                          <MDBCardText className=\"cast-role\">\r\n                            {item.role}\r\n                          </MDBCardText>\r\n                          <MDBCardText className=\"cast-position\">\r\n                            {item.position}\r\n                          </MDBCardText>\r\n                        </MDBCardBody>\r\n                  </MDBCard>\r\n                  ) :( \r\n                  <MDBCard key={item.realName} className=\"cast-list\">\r\n                  {\" \"}\r\n                    {console.log(item)}\r\n                    <MDBRow className=\"cast-card\">\r\n                      <MDBCol md=\"4\">\r\n                      <MDBCardImage\r\n                      src={item.image}\r\n                      alt={item.realName}\r\n                      fluid\r\n                      />\r\n                      </MDBCol>\r\n                      <MDBCol md=\"8\">\r\n                        <MDBCardBody>\r\n                        <MDBCardTitle className=\"cast-name\">\r\n                        {item.realName}{\" \"}\r\n                        {item.leadership ? (\r\n                          <p className=\"guild-lead\">\r\n                                **{item.leadership}**\r\n                                </p>\r\n                                ) : null}\r\n                                </MDBCardTitle>\r\n                                <MDBCardText className=\"cast-role\">\r\n                                {item.role}\r\n                          </MDBCardText>\r\n                          <MDBCardText className=\"cast-position\">\r\n                            {item.position}\r\n                            </MDBCardText>\r\n                            </MDBCardBody>\r\n                      </MDBCol>\r\n                      </MDBRow>\r\n                      </MDBCard>));\r\n              })}\r\n            </details>\r\n          );\r\n        })}\r\n      </div>\r\n      <Link className=\"warriorLink\" to=\"/warriors-island\">\r\n        Our Brave Warriors\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cast;\r\n"]},"metadata":{},"sourceType":"module"}